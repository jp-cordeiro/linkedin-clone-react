{"version":3,"sources":["components/InputOptions/index.js","components/InputOptionsList/index.js","firebase/firebase.utils.js","services/firebase/users.js","components/Post/index.js","store/ducks/posts.js","components/InputFeedForm/index.js","components/Feed/index.js","assets/images/logo.svg","store/ducks/users.js","components/HeaderOptions/index.js","components/Header/index.js","assets/images/background-avatar.jpg","components/SideBar/index.js","assets/images/logo-login.svg","components/Form/CustomButton/index.js","components/Form/CustomInput/index.js","custom-hooks/useForm.js","pages/Login/SignInForm/index.js","pages/Login/SingUpForm/index.js","pages/Login/index.js","App.js","store/ducks/index.js","store/sagas/users.js","store/sagas/posts.js","services/firebase/posts.js","store/sagas/index.js","store/index.js","serviceWorker.js","index.js"],"names":["InputOption","Icon","title","color","className","style","InputOptionsList","inputOptionsList","map","icon","index","createUserProfileDocument","userAuth","addionalData","a","userRef","db","doc","uid","get","exists","username","email","createdAt","Date","set","console","log","message","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","avatar","userId","Post","name","description","user","iconOptions","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","Avatar","src","Types","postsReducer","produce","state","action","type","posts","payload","Creators","post","InputFeedForm","useSelector","usersReducer","currentUser","dispatch","useDispatch","useState","setMessage","handleSendPost","useCallback","event","preventDefault","PostsActions","onSubmit","value","onChange","target","Feed","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewIcon","useEffect","collection","orderBy","onSnapshot","snapshot","docs","id","data","HeaderOptions","onClick","Header","options","HomeIcon","SupervisorAccountIcon","BusinessCenter","ChatIcon","NotificationsIcon","logout","UserActions","signOut","Logo","alt","option","ExitToAppIcon","SideBar","BackgroudnAvatarImage","topic","recentItem","CustomButton","children","restProps","CustomInput","label","length","useForm","setValue","SignInForm","password","customInputStyle","backgroundColor","handleSubmit","signInWithEmailAndPassword","required","SignUpForm","cleanForm","valueReset","createUserWithEmailAndPassword","then","currentUserFirebase","updateProfile","displayName","catch","error","alert","Login","isSignIn","setIsSignIn","LogoLogin","App","onAuthStateChanged","reducers","combineReducers","fetchUser","put","UsersActions","Promise","resolve","reject","all","takeLatest","getPosts","addPost","add","timestamp","FieldValue","serverTimestamp","rootSaga","users","sagaMiddleware","createSagaMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","run","sagas","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe4713ec.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./input-option.scss\";\n\nconst InputOption = ({ Icon, title, color }) => {\n  return (\n    <div className=\"input-option\">\n      <Icon style={{ color: color }} />\n      <h4>{title}</h4>\n    </div>\n  );\n};\n\nexport default InputOption;\n","import React from \"react\";\nimport InputOption from \"../InputOptions\";\n\nfunction InputOptionsList({ inputOptionsList }) {\n  return inputOptionsList.map((icon, index) => (\n    <InputOption\n      key={index}\n      Icon={icon.Icon}\n      title={icon.title}\n      color={icon.color}\n    />\n  ));\n}\n\nexport default InputOptionsList;\n","import firebase from \"firebase/app\";\nimport \"firebase/firebase-firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyBrdCsvMOJbi3i5LJyb5fnGRGs8-gXh_yA\",\n  authDomain: \"linkedin-clone-57ad7.firebaseapp.com\",\n  projectId: \"linkedin-clone-57ad7\",\n  storageBucket: \"linkedin-clone-57ad7.appspot.com\",\n  messagingSenderId: \"52609390305\",\n  appId: \"1:52609390305:web:29e4ada0070d1fa30d09a0\",\n};\n\nexport const createUserProfileDocument = async (userAuth, addionalData) => {\n  if (!userAuth) return;\n  const userRef = db.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  if (!snapShot.exists) {\n    const { username, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        username,\n        email,\n        createdAt,\n        ...addionalData,\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n  return userRef;\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n","import firebase, { auth } from \"../../firebase/firebase.utils\";\n\nexport const getCurrentUser = () => {\n  new Promise((resolve, reject) => {\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(auth.currentUser.id)\n      .get()\n      .then((snapshot) => {\n        if (snapshot.exists) {\n          resolve(snapshot.data());\n        } else {\n          reject(\"does not exist\");\n        }\n      });\n  });\n};\n\nexport const avatar = (userId) => {\n  return `https://robohash.org/${userId}?set=set2`;\n};\n","import React from \"react\";\nimport { Avatar } from \"@material-ui/core\";\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\n\nimport \"./post.scss\";\nimport InputOptionsList from \"../InputOptionsList\";\nimport { avatar } from \"../../services/firebase/users\";\n\nfunction Post({ name, description, message, user }) {\n  const iconOptions = [\n    {\n      Icon: ThumbUpAltOutlinedIcon,\n      title: \"Foto\",\n      color: \"gray\",\n    },\n    {\n      Icon: ChatOutlinedIcon,\n      title: \"Vídeo\",\n      color: \"gray\",\n    },\n    {\n      Icon: ShareOutlinedIcon,\n      title: \"Evento\",\n      color: \"gray\",\n    },\n    {\n      Icon: SendOutlinedIcon,\n      title: \"Escrever artigo\",\n      color: \"gray\",\n    },\n  ];\n  return (\n    <div>\n      <div className=\"post\">\n        <div className=\"post__header\">\n          <Avatar src={avatar(user)} />\n          <div className=\"post__info\">\n            <h2>{name}</h2>\n            <p>{description}</p>\n          </div>\n        </div>\n\n        <div className=\"post_body\">\n          <p>{message}</p>\n        </div>\n\n        <div className=\"post__buttons\">\n          <InputOptionsList inputOptionsList={iconOptions} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n","import produce from \"immer\";\n\nexport const Types = {\n  GET_POSTS: \"posts/GET_POSTS\",\n  LOAD_POSTS: \"posts/LOAD_POSTS\",\n  ADD_POST: \"posts/ADD_POST\",\n};\n\nconst INITIAL_STATE = {\n  posts: [],\n};\n\nexport const postsReducer = produce((state, action) => {\n  switch (action.type) {\n    case \"posts/LOAD_POSTS\":\n      state.posts = action.payload;\n      break;\n    default:\n  }\n}, INITIAL_STATE);\n\nexport const Creators = {\n  getPosts: () => ({\n    type: Types.GET_POSTS,\n  }),\n  loadPosts: (posts) => {\n    console.log(posts);\n    return {\n      type: Types.LOAD_POSTS,\n      payload: posts,\n    };\n  },\n  addPost: (post) => ({\n    type: Types.ADD_POST,\n    payload: post,\n  }),\n};\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Creators as PostsActions } from \"../../store/ducks/posts\";\n\nfunction InputFeedForm() {\n  const user = useSelector((state) => state.usersReducer.currentUser);\n  const dispatch = useDispatch();\n  const [message, setMessage] = useState(\"\");\n\n  const handleSendPost = useCallback(\n    (event) => {\n      event.preventDefault();\n\n      dispatch(\n        PostsActions.addPost({\n          name: user.username,\n          description: user.email,\n          message,\n          user: user.uid,\n        })\n      );\n\n      setMessage(\"\");\n    },\n    [message, dispatch]\n  );\n\n  return (\n    <form onSubmit={handleSendPost}>\n      <input\n        value={message}\n        onChange={({ target }) => setMessage(target.value)}\n        type=\"text\"\n      />\n      <button type=\"submit\">Enviar</button>\n    </form>\n  );\n}\n\nexport default InputFeedForm;\n","import React, { useEffect } from \"react\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport CalendarViewIcon from \"@material-ui/icons/CalendarViewDay\";\nimport InputOptionsList from \"../InputOptionsList\";\nimport Post from \"../Post\";\n\nimport { db } from \"../../firebase/firebase.utils\";\n\nimport \"./feed.scss\";\nimport InputFeedForm from \"../InputFeedForm\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Creators as PostsActions } from \"../../store/ducks/posts\";\n\nconst Feed = () => {\n  const posts = useSelector((state) => state.postsReducer.posts);\n  const dispatch = useDispatch();\n  const iconOptions = [\n    {\n      Icon: ImageIcon,\n      title: \"Foto\",\n      color: \"#7085f9\",\n    },\n    {\n      Icon: SubscriptionsIcon,\n      title: \"Vídeo\",\n      color: \"#e7a33b\",\n    },\n    {\n      Icon: EventNoteIcon,\n      title: \"Evento\",\n      color: \"#c0cbcD\",\n    },\n    {\n      Icon: CalendarViewIcon,\n      title: \"Escrever artigo\",\n      color: \"#7fc15e\",\n    },\n  ];\n\n  useEffect(() => {\n    db.collection(\"posts\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        dispatch(\n          PostsActions.loadPosts(\n            snapshot.docs.map((doc) => ({\n              id: doc.id,\n              data: doc.data(),\n            }))\n          )\n        )\n      );\n  }, [dispatch]);\n\n  return (\n    <div className=\"feed\">\n      <div className=\"feed__input-container\">\n        <div className=\"feed__input\">\n          <CreateIcon />\n          <InputFeedForm />\n        </div>\n        <div className=\"feed__options\">\n          <InputOptionsList inputOptionsList={iconOptions} />\n        </div>\n      </div>\n\n      {/* Posts */}\n      {posts.map((post) => (\n        <Post key={post.id} {...post.data} />\n      ))}\n    </div>\n  );\n};\n\nexport default Feed;\n","export default __webpack_public_path__ + \"static/media/logo.32e20978.svg\";","import produce from \"immer\";\n\nexport const Types = {\n  FETCH_USER: \"users/FETCH_USER\",\n  SET_USER: \"users/SET_USER\",\n};\n\nconst INITIAL_STATE = {\n  currentUser: null,\n};\n\nexport const usersReducer = produce((state, action) => {\n  switch (action.type) {\n    case \"users/FETCH_USER\":\n      state.currentUser = action.payload;\n      break;\n    case \"users/SET_USER\":\n      console.log(action.payload);\n      state.currentUser = action.payload;\n      break;\n    default:\n  }\n}, INITIAL_STATE);\n\nexport const Creators = {\n  fetchUser: (user) => ({\n    type: Types.FETCH_USER,\n    payload: user,\n  }),\n  setUser: (user) => ({\n    type: Types.SET_USER,\n    payload: user,\n  }),\n};\n","import React from \"react\";\nimport { Avatar } from \"@material-ui/core\";\n\nimport \"./header-options.scss\";\n\nconst HeaderOptions = ({ avatar, Icon, title, onClick }) => {\n  return (\n    <div className=\"header-options\" onClick={() => onClick()}>\n      {Icon && <Icon className=\"header-option__icon\" />}\n      {avatar && <Avatar className=\"header-option__icon\" src={avatar} />}\n      <h3 className=\"header-option__title\">{title}</h3>\n    </div>\n  );\n};\n\nexport default HeaderOptions;\n","import React, { useCallback } from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\nimport BusinessCenter from \"@material-ui/icons/BusinessCenter\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\n\nimport Logo from \"../../assets/images/logo.svg\";\nimport { auth } from \"../../firebase/firebase.utils\";\nimport { Creators as UserActions } from \"../../store/ducks/users\";\n\nimport \"./header.scss\";\nimport HeaderOptions from \"../HeaderOptions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { avatar } from \"../../services/firebase/users\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.usersReducer.currentUser);\n  const options = [\n    {\n      Icon: HomeIcon,\n      title: \"Início\",\n    },\n    {\n      Icon: SupervisorAccountIcon,\n      title: \"Inha rede\",\n    },\n    {\n      Icon: BusinessCenter,\n      title: \"Vagas\",\n    },\n    {\n      Icon: ChatIcon,\n      title: \"Mensagens\",\n    },\n    {\n      Icon: NotificationsIcon,\n      title: \"Notificações\",\n    },\n    {\n      title: \"Eu\",\n      avatar: avatar(user.uid),\n    },\n  ];\n\n  const logout = useCallback(async () => {\n    dispatch(UserActions.setUser(null));\n    await auth.signOut();\n  }, []);\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        <img src={Logo} alt=\"Linkedin\" />\n        <div className=\"header__search\">\n          <SearchIcon />\n          <input type=\"text\" />\n        </div>\n      </div>\n      <div className=\"header__right\">\n        {options.map((option, index) => (\n          <HeaderOptions key={index} {...option} />\n        ))}\n        {user ? (\n          <HeaderOptions onClick={logout} Icon={ExitToAppIcon} title=\"Sair\" />\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/background-avatar.59ea100d.jpg\";","import { Avatar } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport BackgroudnAvatarImage from \"../../assets/images/background-avatar.jpg\";\nimport { avatar } from \"../../services/firebase/users\";\n\nimport \"./sidebar.scss\";\n\nconst SideBar = () => {\n  const topics = [\"reactjs\", \"nodejs\", \"vuejs\", \"react-native\"];\n  const user = useSelector((state) => state.usersReducer.currentUser);\n  console.log(user);\n\n  const recentItem = (topic, index) => (\n    <div key={index} className=\"sidebar__recent-item\">\n      <span className=\"sidebar__hash\">#</span>\n      <p>{topic}</p>\n    </div>\n  );\n\n  return (\n    <div className=\"sidebar\">\n      <img src={BackgroudnAvatarImage} alt=\"\" />\n      <div className=\"sidebar__top\">\n        <Avatar src={avatar(user.uid)} className=\"sidebar__avatar\" />\n        <h2>{user.username}</h2>\n        <h4>{user.email}</h4>\n      </div>\n\n      <div className=\"sidebar__stats\">\n        <div className=\"sidebar__stat\">\n          <p>Quem viu seu perfil</p>\n          <p className=\"sidebar__stat-number\">xxx</p>\n        </div>\n        <div className=\"sidebar__stat\">\n          <p>Viram sua publicação</p>\n          <p className=\"sidebar__stat-number\">xxxx</p>\n        </div>\n      </div>\n      <div className=\"sidebar__bottom\">\n        <p>Recentes</p>\n        {topics.map((topic, index) => recentItem(topic, index))}\n      </div>\n    </div>\n  );\n};\n\nexport default SideBar;\n","export default __webpack_public_path__ + \"static/media/logo-login.dc962d93.svg\";","import React from \"react\";\nimport \"./custom-button.scss\";\n\nexport default function CustomButton({ children, ...restProps }) {\n  return (\n    <div className=\"generic-button\">\n      <button {...restProps}>{children}</button>\n    </div>\n  );\n}\n","import React from 'react';\nimport './custom-input.scss';\n\nexport default function CustomInput({ label, ...restProps }) {\n  return (\n    <div className=\"group\">\n      <input\n        type=\"text\"\n        className=\"form-input\"\n        {...restProps}\n      />\n      {label ? (\n        <label\n          className={`${\n            restProps.value.length ? 'shrink' : ''\n          } form-input-label`}\n        >\n          {label}\n        </label>\n      ) : null}\n    </div>\n  );\n}\n","import { useCallback, useState } from 'react';\n\nexport default function useForm() {\n  const [value, setValue] = useState('');\n\n  const onChange = useCallback(\n    ({ target }) => {\n      setValue(target.value);\n    },\n    [setValue]\n  );\n\n  return {\n    value,\n    onChange,\n  };\n}\n","import React, { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport CustomButton from \"../../../components/Form/CustomButton\";\nimport CustomInput from \"../../../components/Form/CustomInput\";\n\nimport useForm from \"../../../custom-hooks/useForm\";\n\nimport firebase from \"../../../firebase/firebase.utils\";\n\nimport \"./sign-in.scss\";\n\nfunction SignInForm() {\n  const email = useForm();\n  const password = useForm();\n\n  const customInputStyle = {\n    backgroundColor: \"rgba(185, 216,232,0.5)\",\n  };\n\n  const handleSubmit = useCallback(\n    async (event) => {\n      event.preventDefault();\n      try {\n        await firebase\n          .auth()\n          .signInWithEmailAndPassword(email.value, password.value);\n      } catch (error) {\n        console.log(error.message);\n      }\n    },\n    [email, password]\n  );\n\n  return (\n    <form onSubmit={handleSubmit} className=\"login-form\">\n      <CustomInput\n        name=\"email\"\n        type=\"email\"\n        label=\"E-mail\"\n        style={customInputStyle}\n        required\n        {...email}\n      />\n      <CustomInput\n        name=\"password\"\n        type=\"password\"\n        label=\"Senha\"\n        style={customInputStyle}\n        required\n        {...password}\n      />\n      <CustomButton>Login</CustomButton>\n    </form>\n  );\n}\n\nexport default SignInForm;\n","import React, { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport CustomButton from \"../../../components/Form/CustomButton\";\nimport CustomInput from \"../../../components/Form/CustomInput\";\n\nimport useForm from \"../../../custom-hooks/useForm\";\n\nimport { Creators as UserActions } from \"../../../store/ducks/users\";\nimport firebase, {\n  auth,\n  createUserProfileDocument,\n} from \"../../../firebase/firebase.utils\";\n\nimport \"./sign-up.scss\";\n\nfunction SignUpForm() {\n  const username = useForm();\n  const email = useForm();\n  const password = useForm();\n  const profilePic = useForm();\n  const dispatch = useDispatch();\n\n  const customInputStyle = {\n    backgroundColor: \"rgba(185, 216,232,0.5)\",\n  };\n\n  const cleanForm = useCallback(() => {\n    const valueReset = {\n      target: {\n        value: \"\",\n      },\n    };\n    username.onChange(valueReset);\n    email.onChange(valueReset);\n    password.onChange(valueReset);\n  }, [username, email, password]);\n\n  const handleSubmit = useCallback(\n    async (event) => {\n      event.preventDefault();\n      try {\n        auth\n          .createUserWithEmailAndPassword(email.value, password.value)\n          .then(async (userAuth) => {\n            console.log(auth.currentUser);\n            const currentUserFirebase = {\n              ...auth.currentUser,\n              username: username.value,\n            };\n            const userRef = await createUserProfileDocument(\n              currentUserFirebase\n            );\n            userRef.onSnapshot((snapshot) => {\n              console.log(snapshot.data());\n            });\n\n            userAuth.user\n              .updateProfile({\n                displayName: username.value,\n              })\n              .then(() => {\n                dispatch(\n                  UserActions.setUser({\n                    email: userAuth.user.email,\n                    uid: userAuth.user.uid,\n                    displayName: username.value,\n                  })\n                );\n              });\n          })\n          .catch((error) => alert(error.message));\n      } catch (error) {\n        console.log(error);\n      } finally {\n        // cleanForm();\n      }\n    },\n    [cleanForm, username, email, password]\n  );\n\n  return (\n    <form onSubmit={handleSubmit} className=\"login-form\">\n      <CustomInput\n        name=\"username\"\n        type=\"text\"\n        label=\"Seu nome completo\"\n        style={customInputStyle}\n        required\n        {...username}\n      />\n      <CustomInput\n        name=\"email\"\n        type=\"email\"\n        label=\"E-mail\"\n        style={customInputStyle}\n        required\n        {...email}\n      />\n      <CustomInput\n        name=\"password\"\n        type=\"password\"\n        label=\"Senha\"\n        style={customInputStyle}\n        required\n        {...password}\n      />\n      <CustomButton>Cadastrar</CustomButton>\n    </form>\n  );\n}\n\nexport default SignUpForm;\n","import React, { useState } from \"react\";\n\nimport LogoLogin from \"../../assets/images/logo-login.svg\";\n\nimport \"./login.scss\";\nimport SignInForm from \"./SignInForm\";\nimport SignUpForm from \"./SingUpForm\";\n\nfunction Login() {\n  const [isSignIn, setIsSignIn] = useState(true);\n  return (\n    <div className=\"login\">\n      <img src={LogoLogin} alt=\"logo-login\" />\n      {isSignIn ? <SignInForm /> : <SignUpForm />}\n      <>\n        {isSignIn ? (\n          <p onClick={() => setIsSignIn(false)}>Ainda não tem um login?</p>\n        ) : (\n          <p onClick={() => setIsSignIn(true)}>Login</p>\n        )}\n      </>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./App.scss\";\r\nimport Feed from \"./components/Feed\";\r\nimport Header from \"./components/Header\";\r\nimport SideBar from \"./components/SideBar\";\r\nimport Login from \"./pages/Login\";\r\n\r\nimport { auth } from \"./firebase/firebase.utils\";\r\nimport { Creators as UserActions } from \"./store/ducks/users\";\r\n\r\nfunction App() {\r\n  const user = useSelector((state) => state.usersReducer.currentUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((userAuth) => {\r\n      if (userAuth) {\r\n        dispatch(\r\n          UserActions.setUser({\r\n            username: userAuth.displayName,\r\n            email: userAuth.email,\r\n            uid: userAuth.uid,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(UserActions.setUser(null));\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {/* App Body */}\r\n      {!user ? (\r\n        <Login />\r\n      ) : (\r\n        <>\r\n          <Header />\r\n          <div className=\"app__body\">\r\n            <SideBar />\r\n            <Feed />\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Widgets */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\n\nimport { usersReducer } from \"./users\";\nimport { postsReducer } from \"./posts\";\n\nconst reducers = combineReducers({ usersReducer, postsReducer });\n\nexport default reducers;\n","import { put, all, takeLatest } from \"redux-saga/effects\";\nimport { getCurrentUser } from \"../../services/firebase/users\";\nimport { Creators as UsersActions } from \"../ducks/users\";\n\nfunction* fetchUser() {\n  try {\n    yield put(UsersActions.fetchUser(getCurrentUser()));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default all([takeLatest(\"users/FETCH_USER\", fetchUser)]);\n","import { put, all, takeLatest } from \"redux-saga/effects\";\nimport { Creators as PostsActions } from \"../ducks/posts\";\nimport {\n  addPostFirebase,\n  getPostsFirebase,\n} from \"../../services/firebase/posts\";\n\nfunction* getPosts() {\n  try {\n    const posts = yield getPostsFirebase();\n    yield put(PostsActions.loadPosts(posts));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* addPost({ payload }) {\n  try {\n    yield addPostFirebase(payload);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default all([\n  takeLatest(\"posts/GET_POSTS\", getPosts),\n  takeLatest(\"posts/ADD_POST\", addPost),\n]);\n","import firebase, { db } from \"../../firebase/firebase.utils\";\n\nexport const getPostsFirebase = () => {\n  return new Promise((resolve, reject) => {\n    db.collection(\"posts\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot(\n        (snapshot) =>\n          resolve(\n            snapshot.docs.map((doc) => ({\n              id: doc.id,\n              data: doc.data(),\n            }))\n          ),\n        reject\n      );\n  });\n};\n\nexport const addPostFirebase = (post) => {\n  console.log(post);\n  return db.collection(\"posts\").add({\n    ...post,\n    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n  });\n};\n","import { all } from \"redux-saga/effects\";\n\nimport users from \"./users\";\nimport posts from \"./posts\";\n\nexport default function* rootSaga() {\n  return yield all([users, posts]);\n}\n","import {createStore, compose, applyMiddleware} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducers from './ducks';\nimport sagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\n\nconst store = createStore(reducers, enhancer);\n\nsagaMiddleware.run(sagas);\n\nexport default store;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}