{"version":3,"sources":["components/InputOptions/index.js","components/Feed/index.js","assets/images/logo.svg","components/HeaderOptions/index.js","components/Header/index.js","assets/images/background-avatar.jpg","components/SideBar/index.js","App.js","store/ducks/users.js","store/ducks/index.js","firebase/firebase.utils.js","store/sagas/users.js","store/sagas/index.js","store/index.js","serviceWorker.js","index.js"],"names":["InputOption","Icon","title","color","className","style","Feed","iconOptions","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewIcon","type","map","icon","index","HeaderOptions","avatar","Avatar","src","Header","options","HomeIcon","SupervisorAccountIcon","BusinessCenter","ChatIcon","NotificationsIcon","Logo","alt","option","SideBar","BackgroudnAvatarImage","topic","recentItem","App","Types","users","produce","state","action","currentUser","payload","Creators","user","reducers","combineReducers","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","provider","firestore","GoogleAuthProvider","setCustomParameters","prompt","fetchUser","collection","doc","id","get","then","snapshot","exists","console","log","data","put","UsersActions","error","all","takeLatest","rootSaga","sagaMiddleware","createSagaMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","run","sagas","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"waAaeA,EATK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAClC,OACE,sBAAKC,UAAU,eAAf,UACE,cAACH,EAAD,CAAMI,MAAO,CAAEF,MAAOA,KACtB,6BAAKD,QCmDII,G,MAjDF,WACX,IAAMC,EAAc,CAClB,CACEN,KAAMO,IACNN,MAAO,OACPC,MAAO,WAET,CACEF,KAAMQ,IACNP,MAAO,WACPC,MAAO,WAET,CACEF,KAAMS,IACNR,MAAO,SACPC,MAAO,WAET,CACEF,KAAMU,IACNT,MAAO,kBACPC,MAAO,YAIX,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,cAAC,IAAD,IACA,iCACE,uBAAOQ,KAAK,SACZ,wBAAQA,KAAK,SAAb,0BAGJ,qBAAKR,UAAU,gBAAf,SACGG,EAAYM,KAAI,SAACC,EAAMC,GAAP,OACf,cAAC,EAAD,CAEEd,KAAMa,EAAKb,KACXC,MAAOY,EAAKZ,MACZC,MAAOW,EAAKX,OAHPY,e,8GC/CJ,MAA0B,iC,gBCe1BC,G,MAVO,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQhB,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACrC,OACE,sBAAKE,UAAU,iBAAf,UACGH,GAAQ,cAACA,EAAD,CAAMG,UAAU,wBACxBa,GAAU,cAACC,EAAA,EAAD,CAAQd,UAAU,sBAAsBe,IAAKF,IACxD,oBAAIb,UAAU,uBAAd,SAAsCF,SCiD7BkB,EA9CA,WACb,IAAMC,EAAU,CACd,CACEpB,KAAMqB,IACNpB,MAAO,aAET,CACED,KAAMsB,IACNrB,MAAO,aAET,CACED,KAAMuB,IACNtB,MAAO,SAET,CACED,KAAMwB,IACNvB,MAAO,aAET,CACED,KAAMyB,IACNxB,MAAO,sBAET,CACEA,MAAO,KACPe,OACE,qLAGN,OACE,sBAAKb,UAAU,SAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKe,IAAKQ,EAAMC,IAAI,aACpB,sBAAKxB,UAAU,iBAAf,UACE,cAAC,IAAD,IACA,uBAAOQ,KAAK,eAGhB,qBAAKR,UAAU,gBAAf,SACGiB,EAAQR,KAAI,SAACgB,EAAQd,GAAT,OACX,cAAC,EAAD,eAA+Bc,GAAXd,YCpDf,MAA0B,8CC0C1Be,G,MApCC,WASd,OACE,sBAAK1B,UAAU,UAAf,UACE,qBAAKe,IAAKY,EAAuBH,IAAI,KACrC,sBAAKxB,UAAU,eAAf,UACE,cAACc,EAAA,EAAD,CAAQd,UAAU,oBAClB,wDACA,0DAGF,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,oDACA,mBAAGA,UAAU,uBAAb,oBAEF,sBAAKA,UAAU,gBAAf,UACE,2DACA,mBAAGA,UAAU,uBAAb,wBAGJ,sBAAKA,UAAU,kBAAf,UACE,yCA5BS,CAAC,UAAW,SAAU,QAAS,gBA6BhCS,KAAI,SAACmB,EAAOjB,GAAR,OA5BC,SAACiB,EAAOjB,GAAR,OACjB,sBAAiBX,UAAU,uBAA3B,UACE,sBAAMA,UAAU,gBAAhB,eACA,4BAAI4B,MAFIjB,GA2BwBkB,CAAWD,EAAOjB,cChBzCmB,MAdf,WACE,OACE,sBAAK9B,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,W,wBCXK+B,EACC,mBAODC,EAAQC,aAAQ,SAACC,EAAOC,GACnC,OAAQA,EAAO3B,MACb,IAAK,mBACH0B,EAAME,YAAcD,EAAOE,WAPX,CACpBD,YAAa,OAWFE,EACA,SAACC,GAAD,MAAW,CACpB/B,KAAMuB,EACNM,QAAS,CAAEE,UCfAC,EAFEC,YAAgB,CAACT,U,qDC+BlCU,IAASC,cA/BM,CACbC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,cACnBC,MAAO,6CA2BF,IAAMC,EAAOR,IAASQ,OAGvBC,GAFmBT,IAASU,YAEjB,IAAIV,IAASQ,KAAKG,oBACnCF,EAASG,oBAAoB,CAAEC,OAAQ,mBAChC,IAEQb,IAAf,E,YCxCUc,IAAV,SAAUA,KAAV,iEACE,IACEd,EACGU,YACAK,WAAW,SACXC,IAAIR,EAAKd,YAAYuB,IACrBC,MACAC,MAAK,SAACC,GACDA,EAASC,QACXC,QAAQC,IAAIH,EAASI,QACrBC,YAAIC,EAAuBN,EAASI,UAEpCF,QAAQC,IAAI,qBAGlB,MAAOI,GACPL,QAAQC,IAAII,GAhBhB,wCAoBeC,mBAAI,CAACC,YAAW,mBAAoBf,M,YCpB1BgB,IAAV,SAAUA,KAAV,iEACN,OADM,SACAF,YAAI,CAACtC,KADL,gFCEf,IAAMyC,GAAiBC,cAGjBC,IADmBC,OAAOC,sCAAwCC,KACtCC,YAAgBN,KAE5CO,GAAQC,YAAYzC,EAAUmC,IAEpCF,GAAeS,IAAIC,IAEJH,U,SCHKI,QACW,cAA7BR,OAAOS,SAASC,UAEe,UAA7BV,OAAOS,SAASC,UAEhBV,OAAOS,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,KAAD,CAAUV,MAAOA,GAAjB,SACE,cAAC,EAAD,QAGJW,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlC,MAAK,SAAAmC,GACjCA,EAAaC,kB","file":"static/js/main.05bc9a75.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./input-option.scss\";\n\nconst InputOption = ({ Icon, title, color }) => {\n  return (\n    <div className=\"input-option\">\n      <Icon style={{ color: color }} />\n      <h4>{title}</h4>\n    </div>\n  );\n};\n\nexport default InputOption;\n","import React from \"react\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport CalendarViewIcon from \"@material-ui/icons/CalendarViewDay\";\nimport InputOption from \"../InputOptions\";\n\nimport \"./feed.scss\";\n\nconst Feed = () => {\n  const iconOptions = [\n    {\n      Icon: ImageIcon,\n      title: \"Foto\",\n      color: \"#7085f9\",\n    },\n    {\n      Icon: SubscriptionsIcon,\n      title: \"Vídeo\",\n      color: \"#e7a33b\",\n    },\n    {\n      Icon: EventNoteIcon,\n      title: \"Evento\",\n      color: \"#c0cbcD\",\n    },\n    {\n      Icon: CalendarViewIcon,\n      title: \"Escrever artigo\",\n      color: \"#7fc15e\",\n    },\n  ];\n\n  return (\n    <div className=\"feed\">\n      <div className=\"feed__input-container\">\n        <div className=\"feed__input\">\n          <CreateIcon />\n          <form>\n            <input type=\"text\" />\n            <button type=\"submit\">Enviar</button>\n          </form>\n        </div>\n        <div className=\"feed__options\">\n          {iconOptions.map((icon, index) => (\n            <InputOption\n              key={index}\n              Icon={icon.Icon}\n              title={icon.title}\n              color={icon.color}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Feed;\n","export default __webpack_public_path__ + \"static/media/logo.32e20978.svg\";","import React from \"react\";\nimport { Avatar } from \"@material-ui/core\";\n\nimport \"./header-options.scss\";\n\nconst HeaderOptions = ({ avatar, Icon, title }) => {\n  return (\n    <div className=\"header-options\">\n      {Icon && <Icon className=\"header-option__icon\" />}\n      {avatar && <Avatar className=\"header-option__icon\" src={avatar} />}\n      <h3 className=\"header-option__title\">{title}</h3>\n    </div>\n  );\n};\n\nexport default HeaderOptions;\n","import React from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\nimport BusinessCenter from \"@material-ui/icons/BusinessCenter\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\n\nimport Logo from \"../../assets/images/logo.svg\";\n\nimport \"./header.scss\";\nimport HeaderOptions from \"../HeaderOptions\";\n\nconst Header = () => {\n  const options = [\n    {\n      Icon: HomeIcon,\n      title: \"Início\",\n    },\n    {\n      Icon: SupervisorAccountIcon,\n      title: \"Inha rede\",\n    },\n    {\n      Icon: BusinessCenter,\n      title: \"Vagas\",\n    },\n    {\n      Icon: ChatIcon,\n      title: \"Mensagens\",\n    },\n    {\n      Icon: NotificationsIcon,\n      title: \"Notificações\",\n    },\n    {\n      title: \"Eu\",\n      avatar:\n        \"https://media-exp1.licdn.com/dms/image/C4E03AQGfo-A4O3ELfQ/profile-displayphoto-shrink_100_100/0/1576532321076?e=1622678400&v=beta&t=WBDG2p5ZtiK5Ng7F98PSs13IDDy1WGrQkCJr9gxRGDM\",\n    },\n  ];\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        <img src={Logo} alt=\"Linkedin\" />\n        <div className=\"header__search\">\n          <SearchIcon />\n          <input type=\"text\" />\n        </div>\n      </div>\n      <div className=\"header__right\">\n        {options.map((option, index) => (\n          <HeaderOptions key={index} {...option} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/background-avatar.59ea100d.jpg\";","import { Avatar } from \"@material-ui/core\";\nimport React from \"react\";\nimport BackgroudnAvatarImage from \"../../assets/images/background-avatar.jpg\";\n\nimport \"./sidebar.scss\";\n\nconst SideBar = () => {\n  const topics = [\"reactjs\", \"nodejs\", \"vuejs\", \"react-native\"];\n  const recentItem = (topic, index) => (\n    <div key={index} className=\"sidebar__recent-item\">\n      <span className=\"sidebar__hash\">#</span>\n      <p>{topic}</p>\n    </div>\n  );\n\n  return (\n    <div className=\"sidebar\">\n      <img src={BackgroudnAvatarImage} alt=\"\" />\n      <div className=\"sidebar__top\">\n        <Avatar className=\"sidebar__avatar\" />\n        <h2>João Paulo Cordeiro</h2>\n        <h4>meuemail@meuemail.com</h4>\n      </div>\n\n      <div className=\"sidebar__stats\">\n        <div className=\"sidebar__stat\">\n          <p>Quem viu seu perfil</p>\n          <p className=\"sidebar__stat-number\">xxx</p>\n        </div>\n        <div className=\"sidebar__stat\">\n          <p>Viram sua publicação</p>\n          <p className=\"sidebar__stat-number\">xxxx</p>\n        </div>\n      </div>\n      <div className=\"sidebar__bottom\">\n        <p>Recentes</p>\n        {topics.map((topic, index) => recentItem(topic, index))}\n      </div>\n    </div>\n  );\n};\n\nexport default SideBar;\n","import React, { useEffect } from \"react\";\r\nimport \"./App.scss\";\r\nimport Feed from \"./components/Feed\";\r\nimport Header from \"./components/Header\";\r\nimport SideBar from \"./components/SideBar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      {/* App Body */}\r\n      <div className=\"app__body\">\r\n        <SideBar />\r\n        <Feed />\r\n      </div>\r\n      {/* Widgets */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import produce from \"immer\";\n\nexport const Types = {\n  FETCH_USER: \"users/FETCH_USER\",\n};\n\nconst INITIAL_STATE = {\n  currentUser: null,\n};\n\nexport const users = produce((state, action) => {\n  switch (action.type) {\n    case \"users/FETCH_USER\":\n      state.currentUser = action.payload;\n      break;\n  }\n}, INITIAL_STATE);\n\nexport const Creators = {\n  fetchUser: (user) => ({\n    type: Types.FETCH_USER,\n    payload: { user },\n  }),\n};\n","import {combineReducers} from 'redux';\n\nimport {users} from './users';\n\nconst reducers = combineReducers({users});\n\nexport default reducers;\n","import firebase from \"firebase/app\";\nimport \"firebase/firebase-firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyBrdCsvMOJbi3i5LJyb5fnGRGs8-gXh_yA\",\n  authDomain: \"linkedin-clone-57ad7.firebaseapp.com\",\n  projectId: \"linkedin-clone-57ad7\",\n  storageBucket: \"linkedin-clone-57ad7.appspot.com\",\n  messagingSenderId: \"52609390305\",\n  appId: \"1:52609390305:web:29e4ada0070d1fa30d09a0\",\n};\n\nexport const createUserProfileDocument = async (userAuth, addionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...addionalData,\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n  return userRef;\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n","import { put, all, takeLatest } from \"redux-saga/effects\";\nimport firebase, { auth } from \"../../firebase/firebase.utils\";\nimport { Creators as UsersActions } from \"../ducks/users\";\n\nfunction* fetchUser() {\n  try {\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(auth.currentUser.id)\n      .get()\n      .then((snapshot) => {\n        if (snapshot.exists) {\n          console.log(snapshot.data());\n          put(UsersActions.fetchUser(snapshot.data()));\n        } else {\n          console.log(\"does not exist\");\n        }\n      });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default all([takeLatest(\"users/FETCH_USER\", fetchUser)]);\n","import {all} from 'redux-saga/effects';\n\nimport users from './users';\n\nexport default function* rootSaga() {\n  return yield all([users]);\n}\n","import {createStore, compose, applyMiddleware} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducers from './ducks';\nimport sagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\n\nconst store = createStore(reducers, enhancer);\n\nsagaMiddleware.run(sagas);\n\nexport default store;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}